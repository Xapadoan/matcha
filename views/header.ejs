<style>
	body {
		font-size: 18px;
		width: 100vw;
		margin: 0px;
		margin-top: 60px;
		top: 0px;
		left: 0px;
		background-image: url('/background.png');
		background-attachment: fixed;
		background-repeat: no-repeat;
		background-position: center;
		background-size: cover;
	}

	.hidden {
		display: none;
	}

	a {
		color: rgb(240, 204, 3);
		text-decoration: none;
		font-weight: bold;
		margin: 2, 2;
	}

	input[type=text], input[type=email], input[type=password], input[type=file], select, button, textarea {
		font-size: 18px;
	}

	textarea {
		width: 80%;
		border-radius: 10px;
		height: 150px;
		text-align: left;
	}

	form {
		border-radius: 20px;
		text-align: center;
		background-color: rgba(160, 160, 160, 0.4);
		padding: 0px 20px;
		min-width: 350px;
		width: 30%;
		margin: 5px 0px;
		margin-left: 20px;
	}

	form * {
		margin: 2px 0px; 
	}

	form p {
		display: inline;
	}

	header {
		display: inline-block;
		background-color: #d33;
		height: 50px;
		border-bottom: solid #800 2px;
		position: fixed;
		width: 100vw;
		top: 0px;
		left: 0px;
		z-index: 1;
	}

	header nav {
		display: inline-block;
	}

	#user_notification {
		background-color: #3cd;
		position: absolute;
		left: 5%;
		top: calc(5% + 50px);
		min-height: 30px;
		min-width: 200px;
		width: 20%;
		text-align: center;
		border: solid #37d 3px;
		border-radius: 5px;
		z-index: 39;
	}

	#notification_box {
		background-image: url('/bell.png');
		width: 48px;
		height: 48px;
		display: inline-block;
		background-size: cover;
	}

	#message_box {
		background-image: url('/bubble.png');
		width: 48px;
		height: 48px;
		display: inline-block;
		background-size: cover;
	}

	#user_error {
		background-color: #d33;
		position: absolute;
		left: 5%;
		top: calc(5% + 50px);
		min-height: 30px;
		min-width: 200px;
		width: 20%;
		text-align: center;
		border: solid #800 3px;
		border-radius: 5px;
		z-index: 40;
	}
</style>
<script src='/socket.io/socket.io.js'></script>
<script>
	var socket = io.connect();
	<% if (typeof locals.user != 'undefined') { %>
	socket.emit('login', '<%= user %>')
	<% } %>

	socket.on('new_notification', (notif) => {
		document.getElementById('notification_box').style.border = "red solid 2px";
	});

	socket.on('new_message', (message) => {
		document.getElementById('message_box').style.border = "red solid 2px";
	});

	let mess_req = new XMLHttpRequest();
	mess_req.open('GET', '/get_messages');

	mess_req.onload = function () {
		if (mess_req.status != 200) {
			console.log('AJAX Error : Status ' + mess_req.status);
		} else {
			//Print message
			console.log('OK');
			console.log(mess_req.response);
		}
	}

	mess_req.onprogress = function () {
		//Print loading
	}

	mess_req.onerror = function () {
		console.log('AJAX Error : Failed to get messages');
	}

	document.getElementById('message_box').addEventListener('click', () => {
		mess_req.send();
	})
</script>
<header>
	<nav class="adaptative_nav_bar">
		<a href="/" title="Accueil"><img src='/home.png' width="48" height="48" /></a>
		<a href="/match" title="Match">Match</a>
		<a href="/search" title="Rechercher"><img src='/google.png' width="48" height="48" /></a>
	</nav>

	<div id='notification_box'></div>
	<div id='message_box'></div>
	
	<nav>
		<% if (typeof locals.user == 'undefined') { %>
		<a href="/signup" title="Créer un compte">Créer un compte</a>
		<a href="/login" title="Se connecter"><img src='/login.png' width="48" height="48" /></a>
		<% } else { %>
		<a href="/home" title="Espace Personnel"><%= user %></a>
		<a href="/logout" title="Déconnexion"><img src='/logout.png' width="48" height="48" /></a>
		<% } %>
	</nav>
</header>

<p class='hidden' id='lat'><% if (typeof locals.location != 'undefined') { %><%= location.lat %><% } %></p>
<p class="hidden" id='lng'><% if (typeof locals.location != 'undefined') { %><%= location.lng %><% } %></p>

<% if (typeof locals.error != 'undefined' && locals.error != null) {
		%><p id="user_error"><%= locals.error %></p>
		<script>
		window.setTimeout(function() {
			let elem = document.getElementById('user_error');
			elem.parentNode.removeChild(elem);
		}, 5000);
		</script><%
} %>

<% if (typeof locals.notification != 'undefined' && locals.notification != null) {
	%><p id="user_notification"><%= locals.notification %></p>
	<script>
	window.setTimeout(function() {
		let elem = document.getElementById('user_notification');
		elem.parentNode.removeChild(elem);
	}, 5000);
	</script><%
} %>