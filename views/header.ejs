<style>
	html {
		position: absolute;
		top: 0px;
		left: 0px;
		margin: 0px;
		padding: 0px;
		width: 100vw;
	}

	body {
		position: relative;
		font-size: 18px;
		width: 100vw;
		margin: 0px;
		margin-top: 60px;
		top: 0px;
		left: 0px;
		background-image: url('/background.jpg');
		background-attachment: fixed;
		background-repeat: no-repeat;
		background-position: center;
		background-size: cover;
	}

	p {
		border-radius: 10px;
    	text-shadow: 0px 0px 2px white;
	}

	.hidden {
		display: none;
	}

	a {
		color: #227;
		text-decoration: none;
		font-weight: bold;
	}

	ul {
		list-style: none;
	}

	input[type=text], input[type=email], input[type=password], input[type=file], select, button, textarea {
		font-size: 18px;
	}

	input[type=number] {
		width: 40px;
	}

	textarea {
		width: 80%;
		border-radius: 10px;
		height: 150px;
		text-align: left;
	}

	form {
		border-radius: 20px;
		text-align: center;
		background-color: rgba(160, 160, 160, 0.4);
		padding: 0px 20px;
		min-width: 350px;
		width: 30%;
		margin: 5px 0px;
		margin-left: 20px;
	}

	form * {
		margin: 2px 0px; 
	}

	form p {
		display: inline;
	}

	header {
		display: inline-block;
		background-color: rgba(116, 33, 67, 0.5);
		height: 50px;
		border-bottom: solid #800 2px;
		position: fixed;
		width: 100vw;
		top: 0px;
		left: 0px;
		z-index: 1;
	}

	header nav {
		display: inline-block;
	}

	#user_notifs {
		background-color: #3cd;
		position: absolute;
		left: 5%;
		top: calc(5% + 50px);
		min-height: 30px;
		min-width: 200px;
		width: 50%;
		text-align: center;
		border: solid #37d 3px;
		border-radius: 5px;
		z-index: 39;
	}

	header .img_link {
		width: 48px;
		height: 48px;
	}

	#notification_box {
		position: relative;
		background-image: url('/bell.png');
		display: inline-block;
		background-size: cover;
		cursor: pointer;
	}

	#message_box {
		position: relative;
		background-image: url('/bubble.png');
		display: inline-block;
		background-size: cover;
		cursor: pointer;
	}

	#user_errors {
		background-color: #d33;
		position: fixed;
		left: 5%;
		top: calc(5% + 50px);
		min-height: 30px;
		min-width: 200px;
		width: 50%;
		text-align: center;
		border: solid #800 3px;
		border-radius: 5px;
		z-index: 40;
	}

	#tiny_notifications, #tiny_messages {
		position: fixed;
		top: 50px;
		background-color: seashell;
		width: 20%;
		min-width: 300px;
		display: none;
		border: solid salmon 2px;
		border-top: 0px;
		border-radius: 0px 0px 15px 15px;
		white-space: pre-wrap;
		z-index: -1;
	}

	#log_nav {
		position: absolute;
		right: 0px;
	}
	
	@media screen and (max-width: 380px) {
		header .img_link {
			width: 36px;
			height: 36px;
		}

		header {
			height: 38px;
		}

		form {
			min-width: 250px;
		}

		#tiny_notifications, #tiny_messages {
			top: 38px;
		}
	}
</style>
<script src='/socket.io/socket.io.js'></script>
<% if (typeof locals.user != 'undefined') { %>
<script>
	var socket = io.connect();
	socket.emit('login', '<%= user %>')
	
	socket.on('new_notification', (notif) => {
		console.log('new Notif')
		if (notif.dest == '<%= user %>') {
			document.getElementById('notification_box').style.border = "red solid 2px";
		}
	});
	
	socket.on('new_message', (message) => {
		if (message.dest == '<%= userid %>') {
			document.getElementById('message_box').style.border = "red solid 2px";
	}
	});
	</script>
<% } %>
<header>
	<nav class="adaptative_nav_bar">
		<a href="/" title="Home"><img class="img_link" src='/home.png' alt="home icon" /></a>
		<a href="/match" title="Match"><img class="img_link" src='/match.png' alt="match icon" /></a>
		<a href="/search" title="Search"><img class="img_link" src='/google.png' alt="search icon" /></a>
	</nav>

	<div id='notification_box' class="img_link" title="Notifications"><aside id='tiny_notifications'></aside></div>
	<div id='message_box' class="img_link" title = "Messages"><aside id = 'tiny_messages'></aside></div>
	<% if (typeof locals.user != 'undefined') { %>
	<script>
		let m_box = document.getElementById('message_box');
		let n_box = document.getElementById('notification_box');

		m_box.addEventListener('click', get_messages);
		n_box.addEventListener('click', get_notifications);
		
		function hideMessages() {
			let t_mess = document.getElementById('tiny_messages');
			t_mess.style.display = "none";
			t_mess.innerHTML = "";
			m_box.removeEventListener('click', hideMessages);
			m_box.addEventListener('click', get_messages);
		}
		function hideNotifications() {
			let t_notif = document.getElementById('tiny_notifications');
			t_notif.style.display = "none";
			t_notif.innerHTML = "";
			n_box.removeEventListener('click', hideNotifications);
			n_box.addEventListener('click', get_notifications);
		}

		function escapeHtml(text) {
			var map = {
			  '&': '&amp;',
			  '<': '&lt;',
			  '>': '&gt;',
			  '"': '&quot;',
			  "'": '&#039;'
			};
  
		return text.replace(/[&<>"']/g, function(m) { return map[m]; });
		}

		function get(url, data = null, anchor = null, callback = null) {
			let xhr = new XMLHttpRequest();
			xhr.open('GET', url);
			xhr.setRequestHeader('Content-Type', 'x-www-form-urlencoded');
			xhr.onreadystatechange = () => {
				//Success
				if (xhr.readyState === 4 && xhr.status === 200) {
					let res = JSON.parse(xhr.responseText);
					if (callback) {
						callback(anchor, res.Data)
					}
					if (res.Error) {
						let li = document.createElement('li');
						li.innerHTML = "<p class='user_error'>" + res.Error + "</p>";
						// let errors = document.getElementById('user_errors');
						// errors.appendChild(li);
						// errors.style.display = "block";
					}
					if (res.Notif) {
						let li = document.createElement('li');
						li.innerHTML = "<p class='user_notif'>" + res.Notif + "</p>";
						// let notifs = document.getElementById('user_notifs');
						// notifs.appendChild(li);
						// notifs.style.display = "block";
					}
				//Authorization or Authentication error
				} else if (xhr.readyState === 4 && xhr.status === 401) {
					let li = document.createElement('li');
					li.innerHTML = "<p class='user_error'>You must sign in with a complete account</p>";
					document.getElementById('user_errors').appendChild(li);
				} else if (xhr.readyState === 4 && xhr.status !== 200) {
					let li = document.createElement('li');
					li.innerHTML = "<p class='user_error'>Somethin is wrong, we are trying to solve it</p>";
					document.getElementById('user_errors').appendChild(li);
				}
			}
			xhr.send(data);
		}

		function get_notifications () {
			get('/get_notifications', null, n_box, (anchor, data) => {
				//Print notifs
				for (let i = 0; i < data.length; i++) {
					let notif_p = document.createElement('p');
					let notif_span = document.createElement('span');
					let box = document.getElementById('tiny_notifications');
					notif_span.innerHTML = data[i].title;
					notif_p.appendChild(notif_span);
					notif_p.innerHTML += '<br />' + data[i].body;
					box.appendChild(notif_p);
					box.style.display = 'block';
				}
				anchor.style.border = "none";
				anchor.removeEventListener('click', get_notifications);
				anchor.addEventListener('click', hideNotifications);
			})
		}

		function get_messages () {
			get('/get_messages', null, m_box, (anchor, data) => {
				//Print notifs
				for (let i = 0; i < data.length; i++) {
					let notif_p = document.createElement('p');
					let notif_span = document.createElement('span');
					let box = document.getElementById('tiny_messages');
					notif_span.innerHTML = data[i].author + ':';
					notif_p.appendChild(notif_span);
					notif_p.innerHTML += '<br />' + data[i].body;
					box.appendChild(notif_p);
					box.style.display = 'block';
				}
				anchor.style.border = 'none';
				m_box.removeEventListener('click', get_messages);
				m_box.addEventListener('click', hideMessages);
			});
		}
		
		<% if (locals.just_logged != undefined) { %>
		if (<%= just_logged %> === true) {
			get('/count_messages', null, m_box, (anchor, data) => {
				if (data > 0) {
					anchor.style.border = "2px solid red";
				}
			});

			get('/count_notifications', null, n_box, (anchor, data) => {
				if (data > 0) {
					anchor.style.border = "2px solid red";
				}
			})
		}
		<% } %>
		</script>
		<% } %>
	
	<nav id='log_nav'>
	<% if (typeof locals.user == 'undefined') { %>
		<a href="/signup" title="Sign Up"><img src='/signup.png' class="img_link" alt="Account creation icon" /></a>
		<a href="/login" title="Sign In"><img src='/login.png' class="img_link" alt="Login icon" /></a>
	<% } else { %>
		<a href="/home" title="Personnal Space"><img src='/personal_space.png' class="img_link" alt="personnal space icon" /></a>
		<a href="/logout" title="Log Out" onclick="socket.disconnect();"><img src='/logout.png' class="img_link" alt="log out icon" /></a>
	<% } %>
	</nav>
</header>

<p class='hidden' id='lat'><% if (typeof locals.location != 'undefined') { %><%= location.lat %><% } %></p>
<p class="hidden" id='lng'><% if (typeof locals.location != 'undefined') { %><%= location.lng %><% } %></p>

<% if (typeof locals.errors != 'undefined' && locals.errors != null && locals.errors.length > 0) { %>
	<ul id="user_errors">
	<% for (i = 0; i < locals.errors.length; i++) { %>
		<li><p class='user_error'><%= errors[i] %></p></li>
	<% } %>
	</ul>
	<script>
	window.setInterval(function() {
		let elem = document.getElementById('user_errors');
		for (i = 0; i < elem.children.length; i++) {
			elem.children[i].parentNode.removeChild(elem.children[i]);
		}
		elem.style.display = 'none';
	}, 3000);
	</script><%
} %>

<% if (typeof locals.notifs != 'undefined' && locals.notifs != null && locals.notifs.length > 0) { %>
	<ul id="user_notifs">
	<% for (i = 0; i < locals.notifs.length; i++) { %>
		<li><p class='user_error'><%= notifs[i] %></p></li>
	<% } %>
	</ul>
	<script>
	window.setInterval(function() {
		let elem = document.getElementById('user_notifs');
		for (i = 0; i < elem.children.length; i++) {
			elem.children[i].parentNode.removeChild(elem.children[i]);
		}
		elem.style.display = 'none';
	}, 3000);
	</script><%
} %>